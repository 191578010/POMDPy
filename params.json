{"name":"POMDPy","tagline":"A framework for implementing discrete or continuous POMDPs in Python. Monte-Carlo Tree Search is used as the default POMDP solver (modeled after the popular POMCP solver).","body":"![Build](https://travis-ci.org/pemami4911/POMDPy.svg?branch=master)\r\n\r\nThis open-source project contains a framework for implementing discrete or continuous POMDPs in Python. The organization of the code was inspired by [TAPIR](http://robotics.itee.uq.edu.au/~hannakur/dokuwiki/doku.php?id=wiki:tapir) and the [POMCP](http://www0.cs.ucl.ac.uk/staff/D.Silver/web/Applications.html) algorithm.\r\n\r\n[What the heck is a POMDP?](http://www.pomdp.org/tutorial/index.shtml)\r\n\r\nHere's David Silver and Joel Veness's paper on POMCP, a ground-breaking POMDP solver. [Monte-Carlo Planning in Large POMDPs](http://papers.nips.cc/paper/4031-monte-carlo-planning-in-large-pomdps.pdf)\r\n\r\nThis is project has been conducted strictly for research purposes. If you would like to contribute to POMDPy or if you have any comments or suggestions, feel free to send me a pull request or send me an email at pemami@ufl.edu.  \r\n\r\n## Installation ##\r\nDownload the files as a zip or clone into the repository.\r\nFrom the root directory of the project, run\r\n \r\n    python setup.py install\r\n\r\n## Running a sample ##\r\nYou can optionally tweak the system and RockSample configuration files, which are located in the config folder.\r\nThe default RockSample Problem is RockSample(7, 8), a 7 x 7 grid with 8 rocks.\r\n\r\nTo run the RockSample Problem, simply enter\r\n\r\n    python src/run_pomdp.py\r\n\r\nThe TigerProblem can be run by changing the value of the \"SampleProblem\" variable in src/run_pomdp.py to 2.\r\nSee src/README.md for more implementation details.\r\n\r\n## Running tests ##\r\nUnit tests can be ran with \r\n    \r\n    py.test test/unit_tests.py\r\n    \r\n## Dependencies ##\r\n\r\nThis project uses:\r\n\r\n* Python 2.7.9\r\n* numpy 1.9.2\r\n* pytest 2.7.0\r\n\r\nOptional, for extended functionality:\r\n\r\n* matplotlib 1.4.3\r\n* pygame 1.9.1 \r\n\r\n## TODO ##\r\n* Unit Test coverage is currently minimal, so this area is going to be expanded upon soon\r\n* The current test-problems are the RockSample and TigerProblem. More test problems are being worked on \r\n* An extension for GPU-MCTS is being planned. The NumbaPro Python module seems to be a good bet for this\r\n* The PyGame sim is currently not supported, due to recent changes\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}